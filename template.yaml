AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  lambda-springboot
  Sample SAM Template for lambda-springboot

Globals:
  Function:
    #Tracing: Active
    #Handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest
    Runtime: java21
    MemorySize: 1024
    Timeout: 30
    Architectures:
      - x86_64
    Tracing: Active
    Handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest
    CodeUri: solicitudes/

    Environment:
      Variables:
        SOLICITUD_TABLE_NAME: !Ref SolicitudesTable

Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Name: My Lambda springboot Sample API

  GetSolicitudByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      #CodeUri: Solicitudes/Target/Solicitudes-1.0-Snapshot-Lambda.Jar

      Handler: software.amazonaws.example.solicitud.solicitud.handler.ObtenerSolicitudPorIdUseCase::handleRequest
      #Environment:
      #  Variables:
      #    SPRING_CLOUD_FUNCTION_DEFINITION: obtenerSolicitudPorIdUseCase
      #Policies:
      #  - DynamoDBReadPolicy:
      #      TableName: !Ref SolicitudesTable
      Events:
        GetRequestById:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /solicitudes/{id}
            Method: GET

  GetSolicitudesFunction:
    Type: AWS::Serverless::Function
    Properties:
      #CodeUri: Solicitudes/Target/Solicitudes-1.0-Snapshot-Lambda.Jar

      Handler: software.amazonaws.example.solicitud.solicitud.handler.ObtenerSolicitudesUseCase::handleRequest
      #Environment:
      #  Variables:
      #    SPRING_CLOUD_FUNCTION_DEFINITION: obtenerSolicitudesUseCase
      #Policies:
      #  - DynamoDBReadPolicy:
      #      TableName: !Ref SolicitudesTable
      Events:
        GetRequest:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /solicitudes
            Method: GET

  PutSolicitudFunction:
    Type: AWS::Serverless::Function
    Properties:
      #CodeUri: Solicitudes/Target/Solicitudes-1.0-Snapshot-Lambda.Jar

      Handler: software.amazonaws.example.solicitud.solicitud.handler.CrearSolicitudUseCase::handleRequest
      #Environment:
      #  Variables:
      #    SPRING_CLOUD_FUNCTION_DEFINITION: crearSolicitudUseCase
      #Policies:
      #  - DynamoDBCrudPolicy:
      #      TableName: !Ref SolicitudesTable
      Events:
        PutRequest:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /solicitudes/{id}
            Method: PUT

  DeleteSolicitudFunction:
    Type: AWS::Serverless::Function
    Properties:
      #CodeUri: Solicitudes/Target/Solicitudes-1.0-Snapshot-Lambda.Jar

      Handler: software.amazonaws.example.solicitud.solicitud.handler.EliminarSolicitudUseCase::handleRequest
      #Environment:
      #  Variables:
      #    SPRING_CLOUD_FUNCTION_DEFINITION: eliminarSolicitudUseCase
      #Policies:
      #  - DynamoDBCrudPolicy:
      #      TableName: !Ref SolicitudesTable
      Events:
        PutRequest:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /solicitudes/{id}
            Method: DELETE

  SolicitudesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: 'PK'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'PK'
          KeyType: 'HASH'
      BillingMode: PAY_PER_REQUEST

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL for Prod stage for Springboot sample function"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/prod/solicitudes"