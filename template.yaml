AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  lambda-springboot
  Sample SAM Template for lambda-springboot

Globals:
  Function:
    Tracing: Active
    Handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest
    Runtime: java21
    Timeout: 30
    MemorySize: 1024
    Environment:
      Variables:
        SOLICITUD_TABLE_NAME: !Ref SolicitudesTable

Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Name: My Lambda springboot Sample API

  GetSolicitudByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: software.amazonaws.example.solicitud.solicitud.handler.ObtenerSolicitudPorIdUseCase
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: obtenerSolicitudPorIdUseCase
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref SolicitudesTable
      Events:
        GetRequestById:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /solicitudes/{id}
            Method: get

  GetSolicitudesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: software.amazonaws.example.solicitud.solicitud.handler.ObtenerSolicitudesUseCase
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: obtenerSolicitudesUseCase
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref SolicitudesTable
      Events:
        GetRequest:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /solicitudes
            Method: get

  PutSolicitudFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: software.amazonaws.example.solicitud.solicitud.handler.CrearSolicitudUseCase
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: crearSolicitudUseCase
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SolicitudesTable
      Events:
        PutRequest:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /solicitudes/{id}
            Method: put

  DeleteSolicitudFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: software.amazonaws.example.solicitud.solicitud.handler.EliminarSolicitudUseCase
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: eliminarSolicitudUseCase
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SolicitudesTable
      Events:
        PutRequest:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /solicitudes/{id}
            Method: delete

  SolicitudesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: 'PK'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'PK'
          KeyType: 'HASH'
      BillingMode: PAY_PER_REQUEST

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL for Prod stage for Springboot sample function"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/prod/solicitudes"
